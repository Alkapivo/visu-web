{"version":3,"sources":["constants/config.js","hooks/useStore.js","components/Toolbar.js","components/Steps.js","utils/Sound.js","hooks/useSound.js","components/Note.js","components/Track.js","components/TrackList.js","components/PlayHead.js","hooks/useTimer.js","hooks/useStyles.js","App.js","utils/serviceWorker.js","index.js"],"names":["sequenceList","id","title","noteCount","trackList","soundFile","onNotes","soundFiles","0x5","4x7","5x4","4x4","Context","createContext","sequence","toggleNote","selectSequence","appReducer","state","action","type","Object","objectSpread2","find","seq","value","newTrackList","map","track","trackID","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","_ref2","newOnNotes","stepID","indexOf","concat","toConsumableArray","filter","col","sequenceID","memo","setStartTime","setPastLapse","setBPM","isSequencePlaying","startTime","BPM","_useContext","useContext","selectedSequenceID","className","onClick","aria-label","width","height","viewBox","x","y","l","performance","now","data-state","d","onChange","e","target","htmlFor","key","Steps","_ref$count","count","content","Array","el","i","Sound","path","classCallCheck","this","isSafari","navigator","userAgent","match","document","body","style","webkitFilter","AudioContext","window","webkitAudioContext","MozAudioContext","audioContext","isSafariFixed","boundSafariFix","safariFix","bind","addEventListener","loadSound","removeEventListener","buffer","createBuffer","source","createBufferSource","connect","destination","start","console","log","recorderNode","createGain","gain","arrayBuffer","Promise","resolve","reject","decodeAudioData","arguments","length","undefined","keys","useSound","soundFilePath","_useState","useState","play","_useState2","sound","setSound","useCallback","useEffect","isNoteOn","isNoteOnCurrentStep","noteClassNames","classNames","on","playing","classList","toggle","currentStepID","_useSound","notes","src_components_Note","_useContext$sequence","src_components_Track","notesAreaWidthInPixels","timePerSequence","totalLapsedTime","PlayHead","useRef","useLayoutEffect","progress","Math","min","current","transform","toFixed","ref","useTimer","running","setNow","requestAnimationFrame","cancelAnimationFrame","defaults","__app_visibility","__color_bg","__color_fg","__color_black","__color_dark_grey","__color_light_grey","__color_highlight","__base_font_size","__number_of_steps","__number_of_tracks","__grid_unit","__play_head_width","__form_element_height","__input_bpm_width","__step_height","__track_title_width","__note_width","__note_height","__note_border_size","__note_margin_vert","__note_margin_horz","noteWidthFull","noteHeightFull","getNotesAreaWidthInPixels","totalSteps","setProperty","documentElement","useStyles","setStyles","App","_useState3","_useState4","_useState5","_useState6","pastLapsedTime","_useState7","_useState8","setCurrentStep","_useStyles","stepsPerBar","beatsPerBar","timePerStep","playerTime","max","floor","toolBarProps","playHeadProps","trackListProps","useStore_Provider","components_Toolbar","src_components_Steps","src_components_PlayHead","components_TrackList","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf60bf66.chunk.js","sourcesContent":["const sequenceList = [\r\n    {\r\n        id: 0,\r\n        title: 'Sequence 1',\r\n        noteCount: 32,\r\n        trackList: [\r\n            {\r\n                title: 'START_SHADER 1',\r\n                soundFile: '0x5',\r\n                onNotes: [],\r\n            },\r\n            {\r\n                title: 'SPAWN_SHROOM',\r\n                soundFile: '4x7',\r\n                onNotes: [],\r\n            },\r\n            {\r\n                title: 'MESH_SMALL_PULSE',\r\n                soundFile: '5x4',\r\n                onNotes: [],\r\n            },\r\n            {\r\n                title: 'MESH_BIG_PULSE',\r\n                soundFile: '4x4',\r\n                onNotes: [],\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nconst soundFiles = {\r\n    '0x5': '0x5',\r\n    '4x7': '4x7',\r\n    '5x4': '5x4',\r\n    '4x4': '4x4',\r\n}\r\n\r\nexport { sequenceList, soundFiles }\r\n","import React, { useReducer, createContext } from 'react'\r\nimport { sequenceList } from '../constants/config'\r\n\r\nconst Context = createContext({\r\n    sequence: {},\r\n    toggleNote: () => { },\r\n    selectSequence: () => { },\r\n})\r\n\r\nconst appReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_SEQUENCE':\r\n            return {\r\n                ...sequenceList.find(seq => seq.id === action.value)\r\n            }\r\n        case 'SET_ON_NOTES':\r\n            let newTrackList = state.trackList.map((track, trackID) => {\r\n                if (action.trackID === trackID) {\r\n                    return {\r\n                        ...track,\r\n                        onNotes: action.value\r\n                    }\r\n                } else {\r\n                    return track\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                trackList: newTrackList\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst Provider = ({ children }) => {\r\n    const [sequence, dispatch] = useReducer(appReducer, { ...sequenceList[0] })\r\n\r\n    const toggleNote = ({ trackID, stepID }) => {\r\n        let newOnNotes\r\n        const onNotes = sequence.trackList[trackID].onNotes\r\n\r\n        if (onNotes.indexOf(stepID) === -1) {\r\n            newOnNotes = [...onNotes, stepID]\r\n        } else {\r\n            newOnNotes = onNotes.filter(col => col !== stepID)\r\n        }\r\n        dispatch({\r\n            type: 'SET_ON_NOTES',\r\n            value: newOnNotes,\r\n            trackID\r\n        })\r\n    }\r\n\r\n    const selectSequence = (sequenceID) => {\r\n        dispatch({\r\n            type: 'SET_SEQUENCE',\r\n            value: sequenceID,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ sequence, toggleNote, selectSequence }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {\r\n    Provider,\r\n    Context\r\n}\r\n","import React, { useContext, memo } from 'react'\r\nimport { sequenceList } from '../constants/config'\r\nimport { Context } from '../hooks/useStore'\r\nimport './Toolbar.css'\r\n\r\nconst ToolBar = ({\r\n    setStartTime,\r\n    setPastLapse,\r\n    setBPM,\r\n    isSequencePlaying,\r\n    startTime,\r\n    BPM\r\n}) => {\r\n    const { sequence: { id: selectedSequenceID }, selectSequence } = useContext(Context)\r\n\r\n    function togglePlayback() {\r\n        if (isSequencePlaying) {\r\n            setPastLapse(l => l + performance.now() - startTime)\r\n            setStartTime(null)\r\n        } else {\r\n            setStartTime(performance.now())\r\n        }\r\n    }\r\n\r\n    function stopPlayback() {\r\n        setPastLapse(0)\r\n        setStartTime(null)\r\n    }\r\n\r\n    function updateBPM(e) {\r\n        setBPM(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"toolbar\">\r\n            <button className=\"form_element button_stop\" onClick={stopPlayback} aria-label=\"Stop\">\r\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\r\n                    <rect className=\"button_icon_path\" x=\"2\" y=\"2\" width=\"10\" height=\"10\" />\r\n                </svg>\r\n\r\n            </button>\r\n            <button className=\"form_element button_play_pause\" onClick={togglePlayback} aria-label=\"Play / Pause\">\r\n                <svg width=\"14\" height=\"14\" viewBox=\"8 8 20 20\">\r\n                    {isSequencePlaying && <path className=\"button_icon_path\" id=\"pause-icon\" data-state=\"playing\" d=\"M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26\" />}\r\n                    {!isSequencePlaying && <path className=\"button_icon_path\" id=\"play-icon\" data-state=\"paused\" d=\"M11,10 L18,13.74 18,22.28 11,26 M18,13.74 L26,18 26,18 18,22.28\" />}\r\n                </svg>\r\n            </button>\r\n            <input className=\"form_element input_bpm\" id=\"bpm\" type=\"text\" value={BPM} onChange={updateBPM} />\r\n            <label className=\"label_bpm\" htmlFor=\"bpm\">BPM</label>\r\n            <select\r\n                className=\"form_element select_sequence\"\r\n                value={selectedSequenceID}\r\n                onChange={e => selectSequence(+e.target.value)}\r\n                aria-label=\"Select sequence\"\r\n            >\r\n                {\r\n                    sequenceList.map(seq => {\r\n                        return (\r\n                            <option\r\n                                key={seq.id}\r\n                                value={seq.id}\r\n                            >\r\n                                {seq.title}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default memo(ToolBar)\r\n","import React from 'react'\r\nimport './Steps.css'\r\n\r\nconst Steps = ({ count = 0 }) => {\r\n    let content = [...Array(count)].map((el, i) => <div className=\"step\" key={i + 1}>{i + 1}</div>)\r\n\r\n    return (\r\n        <div className=\"steps\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps\r\n\r\n","class Sound {\r\n\r\n    constructor(path) {\r\n\r\n        const isSafari = !!navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && typeof document.body.style.webkitFilter !== \"undefined\"\r\n        const AudioContext = window.AudioContext || window.webkitAudioContext || window.MozAudioContext\r\n        this.audioContext = new AudioContext()\r\n        if (isSafari) {\r\n            this.isSafariFixed = false\r\n            this.boundSafariFix = this.safariFix.bind(this)\r\n            window.addEventListener('click', this.boundSafariFix, false)\r\n        }\r\n        this.loadSound(path)\r\n    }\r\n\r\n    safariFix() {\r\n        if (this.isSafariFixed) {\r\n            window.removeEventListener('click', this.boundSafariFix, false)\r\n            return\r\n        }\r\n        // create empty buffer, connect to speakers and play the file\r\n        var buffer = this.audioContext.createBuffer(1, 1, 22050)\r\n        var source = this.audioContext.createBufferSource()\r\n        source.buffer = buffer\r\n        source.connect(this.audioContext.destination)\r\n        source.start(0)\r\n        this.isSafariFixed = true\r\n    }\r\n\r\n    loadSound(path) {\r\n        console.log(\"Load sound\", path)\r\n        this.recorderNode = this.audioContext.createGain()\r\n        this.recorderNode.gain.value = 1\r\n        this.buffer = null\r\n        this.path = path\r\n        /*\r\n        const response = await fetch(path)\r\n        const arrayBuffer = await response.arrayBuffer()\r\n        const audioBuffer = await this.decodeAudioDataAsync(\r\n            this.audioContext, arrayBuffer\r\n        )\r\n        this.buffer = audioBuffer\r\n        */\r\n    }\r\n\r\n    decodeAudioDataAsync(audioContext, arrayBuffer) {\r\n        return new Promise((resolve, reject) => {\r\n            audioContext.decodeAudioData(\r\n                arrayBuffer,\r\n                buffer => resolve(buffer),\r\n                e => reject(e)\r\n            )\r\n        })\r\n    }\r\n\r\n    play(gainValue = 1, rateValue = 1) {\r\n        console.log(\"INLINE_HOOK\", this.path, Object.keys(this));\r\n    }\r\n}\r\n\r\nexport default Sound\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport Sound from '../utils/Sound'\r\n\r\nconst useSound = (soundFilePath) => {\r\n    const [sound, setSound] = useState({ play: () => { } })\r\n    const play = useCallback(() => sound.play(), [sound])\r\n\r\n    useEffect(() => {\r\n        setSound(new Sound(soundFilePath))\r\n    }, [soundFilePath])\r\n\r\n    return [play]\r\n}\r\n\r\nexport default useSound\r\n","import React, { useContext, useEffect, memo } from 'react'\r\nimport classNames from 'classnames'\r\nimport { Context } from '../hooks/useStore'\r\nimport './Note.css'\r\n\r\nconst Note = ({\r\n    trackID,\r\n    stepID,\r\n    isNoteOn,\r\n    isNoteOnCurrentStep,\r\n    play\r\n}) => {\r\n\r\n    const { toggleNote } = useContext(Context)\r\n    const noteClassNames = classNames('note', {\r\n        'on': isNoteOn,\r\n        'playing': isNoteOn && isNoteOnCurrentStep\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isNoteOn && isNoteOnCurrentStep) {\r\n            play()\r\n        }\r\n\r\n    }, [isNoteOn, isNoteOnCurrentStep, play])\r\n\r\n    const noteClicked = e => {\r\n        e.target.classList.toggle('on')\r\n        toggleNote({ trackID, stepID })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={noteClassNames}\r\n            onClick={noteClicked}\r\n        />\r\n    )\r\n}\r\n\r\nexport default memo(Note)\r\n","import React, { memo } from 'react'\r\nimport useSound from '../hooks/useSound'\r\nimport Note from './Note'\r\nimport './Track.css'\r\n\r\nconst Track = ({\r\n    trackID,\r\n    currentStepID,\r\n    title,\r\n    noteCount,\r\n    onNotes,\r\n    soundFilePath,\r\n}) => {\r\n    const [play] = useSound(soundFilePath)\r\n    \r\n    const notes = [...Array(noteCount)].map((el, i) => {\r\n        const isNoteOn = onNotes.indexOf(i) !== -1\r\n        const isNoteOnCurrentStep = currentStepID === i\r\n        const stepID = i\r\n        return (\r\n            <Note\r\n                key={i}\r\n                trackID={trackID}\r\n                stepID={stepID}\r\n                isNoteOn={isNoteOn}\r\n                isNoteOnCurrentStep={isNoteOnCurrentStep}\r\n                play={play}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"track\">\r\n            <header className=\"track_title\">{title}</header>\r\n            <main className=\"track_notes\">\r\n                {notes}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Track)\r\n","import React, { useContext, memo } from 'react'\r\nimport { Context } from '../hooks/useStore'\r\nimport { soundFiles } from '../constants/config'\r\nimport Track from './Track'\r\n\r\nconst TrackList = ({ currentStepID }) => {\r\n    const { sequence: { trackList, noteCount } } = useContext(Context)\r\n    const content = trackList.map((track, trackID) => {\r\n        const { title, onNotes, soundFile } = track\r\n        const soundFilePath = soundFiles[soundFile]\r\n\r\n        return (\r\n            <Track\r\n                key={title}\r\n                trackID={+trackID}\r\n                currentStepID={currentStepID}\r\n                title={title}\r\n                noteCount={noteCount}\r\n                onNotes={onNotes}\r\n                soundFilePath={soundFilePath}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"track-list\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TrackList)\r\n\r\n","import React, { useRef, useLayoutEffect, memo } from 'react'\r\nimport './PlayHead.css'\r\n\r\nconst PlayHead = ({\r\n    notesAreaWidthInPixels,\r\n    timePerSequence,\r\n    totalLapsedTime\r\n}) => {\r\n    const PlayHead = useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        let progress = Math.min((totalLapsedTime % timePerSequence) / timePerSequence, 1)\r\n\r\n        PlayHead.current.style.transform = 'translate3d(' + (progress * notesAreaWidthInPixels).toFixed(2) + 'px, 0, 0px)'\r\n    }, [notesAreaWidthInPixels, timePerSequence, totalLapsedTime])\r\n\r\n    return (\r\n        <div className=\"play_head\" ref={PlayHead}></div>\r\n    )\r\n}\r\n\r\nexport default memo(PlayHead)\r\n","import { useState, useLayoutEffect } from 'react'\r\n\r\nconst useTimer = (running) => {\r\n    const [now, setNow] = useState(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (!running) {\r\n            return\r\n        }\r\n\r\n        const id = requestAnimationFrame(() => setNow(performance.now()))\r\n\r\n        return () => cancelAnimationFrame(id)\r\n\r\n    }, [running, now])\r\n\r\n    return running ? now : null\r\n\r\n}\r\n\r\nexport default useTimer\r\n","import { useEffect } from 'react'\r\n\r\nconst defaults = {\r\n    '__app_visibility'     : 'visible',\r\n    '__color_bg'           : '#505050',\r\n    '__color_fg'           : '#f5f5f5',\r\n    '__color_black'        : '#000',\r\n    '__color_dark_grey'    : '#2e2e2e',\r\n    '__color_light_grey'   : '#5d5d5d',\r\n    '__color_highlight'    : '#37e147',\r\n    '__base_font_size'     : 12,\r\n    '__number_of_steps'    : 32,\r\n    '__number_of_tracks'   : 4,\r\n    '__grid_unit'          : 2,\r\n    '__play_head_width'    : 2,\r\n    '__form_element_height': 30,\r\n    '__input_bpm_width'    : 45,\r\n    '__step_height'        : 32,\r\n    '__track_title_width'  : 120,\r\n    '__note_width'         : 32,\r\n    '__note_height'        : 49,\r\n    '__note_border_size'   : 1,\r\n    '__note_margin_vert'   : 5,\r\n    '__note_margin_horz'   : 4,\r\n}\r\n\r\nconst noteWidthFull = defaults.__note_width + defaults.__note_margin_horz * 2\r\nconst noteHeightFull = defaults.__note_height + defaults.__note_margin_vert * 2\r\n\r\nconst getNotesAreaWidthInPixels = (totalSteps) => noteWidthFull * totalSteps - (defaults.__play_head_width / 2)\r\n\r\nconst setProperty = (key, value) => document.documentElement.style.setProperty(key, value)\r\n\r\nconst setStyles = (totalSteps) => {\r\n    defaults.__number_of_steps = totalSteps\r\n    setProperty('--app-visibility', defaults.__app_visibility)\r\n    setProperty('--color-bg', defaults.__color_bg)\r\n    setProperty('--color-fg', defaults.__color_fg)\r\n    setProperty('--color-black', defaults.__color_black)\r\n    setProperty('--color-dark-grey', defaults.__color_dark_grey)\r\n    setProperty('--color-light-grey', defaults.__color_light_grey)\r\n    setProperty('--color-highlight', defaults.__color_highlight)\r\n    setProperty('--base-font-size', defaults.__base_font_size + 'px')\r\n    setProperty('--number-of-steps', defaults.__number_of_steps)\r\n    setProperty('--play-head-width', defaults.__play_head_width + 'px')\r\n    setProperty('--play-head-height', noteHeightFull * defaults.__number_of_tracks - (defaults.__note_margin_vert * 2) + 'px')\r\n    setProperty('--spacer', defaults.__grid_unit * 5 + 'px')\r\n    setProperty('--form-element-height', defaults.__form_element_height + 'px')\r\n    setProperty('--button-pause-play-width', defaults.__form_element_height + 'px')\r\n    setProperty('--input-bpm-width', defaults.__input_bpm_width + 'px')\r\n    setProperty('--step-height', defaults.__step_height + 'px')\r\n    setProperty('--track-title-width', defaults.__track_title_width + 'px')\r\n    setProperty('--note-border-size', defaults.__note_border_size + 'px')\r\n    setProperty('--note-width', defaults.__note_width + 'px')\r\n    setProperty('--note-height', defaults.__note_height + 'px')\r\n    setProperty('--note-margin-vert', defaults.__note_margin_vert + 'px')\r\n    setProperty('--note-margin-horz', defaults.__note_margin_horz + 'px')\r\n    setProperty('--note-width-full', noteWidthFull + 'px')\r\n    setProperty('--left-gutter-size', defaults.__track_title_width + defaults.__grid_unit * 5 * 2 + 'px')\r\n    setProperty('--all-note-widths', (noteWidthFull) * defaults.__number_of_steps + 'px')\r\n    setProperty('--app-max-width', (defaults.__track_title_width + defaults.__grid_unit * 5 * 2) + ((defaults.__note_width + defaults.__note_margin_horz * 2) * defaults.__number_of_steps) + 'px')\r\n}\r\n\r\nconst useStyles = (totalSteps) => {\r\n    useEffect(() => {\r\n        setStyles(totalSteps)\r\n    }, [totalSteps])\r\n    return [getNotesAreaWidthInPixels]\r\n}\r\n\r\nexport default useStyles\r\n","import React, { useState, useEffect } from 'react'\r\nimport ToolBar from './components/Toolbar'\r\nimport Steps from './components/Steps'\r\nimport TrackList from './components/TrackList'\r\nimport PlayHead from './components/PlayHead'\r\nimport { Provider } from './hooks/useStore'\r\nimport useTimer from './hooks/useTimer'\r\nimport useStyles from './hooks/useStyles'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n    const baseBPMPerOneSecond = 60\r\n    const stepsPerBar = 8\r\n    const beatsPerBar = 4\r\n    const barsPerSequence = 2\r\n    const totalSteps = stepsPerBar * barsPerSequence\r\n    const totalBeats = beatsPerBar * barsPerSequence\r\n\r\n    const [BPM, setBPM] = useState(120)\r\n    const [startTime, setStartTime] = useState(null)\r\n    const [pastLapsedTime, setPastLapse] = useState(0)\r\n    const [currentStepID, setCurrentStep] = useState(null)\r\n    const [getNotesAreaWidthInPixels] = useStyles(totalSteps)\r\n\r\n    const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps)\r\n    const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats\r\n    const timePerStep = timePerSequence / totalSteps\r\n    const isSequencePlaying = startTime !== null\r\n    const playerTime = useTimer(isSequencePlaying)\r\n    const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0\r\n    const totalLapsedTime = pastLapsedTime + lapsedTime\r\n\r\n    useEffect(() => {\r\n        if (isSequencePlaying) {\r\n            setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps)\r\n        } else {\r\n            setCurrentStep(null)\r\n        }\r\n    }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps])\r\n\r\n    const toolBarProps = {\r\n        setStartTime,\r\n        setPastLapse,\r\n        setBPM,\r\n        isSequencePlaying,\r\n        startTime,\r\n        BPM\r\n    }\r\n\r\n    const playHeadProps = {\r\n        notesAreaWidthInPixels,\r\n        timePerSequence,\r\n        totalLapsedTime\r\n    }\r\n\r\n    const trackListProps = {\r\n        currentStepID\r\n    }\r\n\r\n    return (\r\n        <Provider>\r\n            <main className=\"app\">\r\n                <header className=\"app_header\">\r\n                    <ToolBar {...toolBarProps} />\r\n                </header>\r\n                <Steps count={totalSteps} />\r\n                <div className=\"app_content\">\r\n                    <PlayHead {...playHeadProps} />\r\n                    <TrackList {...trackListProps} />\r\n                </div>\r\n            </main >\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister()\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './utils/serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// For offline support change unregister() to register()  https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}